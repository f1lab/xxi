<?php

/**
 * Material
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    xxi
 * @subpackage model
 * @author     Saritskiy Roman
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Material extends BaseMaterial
{
  protected $arrivalsAmount = null
    , $arrivalsSum = null
    , $utilizationsAmount = null
    , $utilizationsSum = null
  ;

  public function getNameWithDimension()
  {
    return $this->getName() . ', ' . $this->getDimension();
  }



  public function getArrivalsAmount($from=false, $to=false)
  {
    if (null === $this->arrivalsAmount) {
      $query = Doctrine_Query::create()
        ->from('Arrival a')
        ->select('sum(a.amount)')
        ->addWhere('a.material_id = ?', $this->getId())
      ;

      if ($from or $to) {
        $query->addWhere('(a.arrived_at >= ? and a.arrived_at <= ?)', [
          $from,
          $to,
        ]);
      }

      $this->arrivalsAmount = (double)$query->execute([], Doctrine_Core::HYDRATE_SINGLE_SCALAR);
    }

    return $this->arrivalsAmount;
  }

  public function getArrivalsSum($from=false, $to=false)
  {
    if (null === $this->arrivalsSum) {
      $query = Doctrine_Query::create()
        ->from('Arrival a')
        ->select('sum(a.amount * a.price) arrived_sum')
        ->addWhere('a.material_id = ?', $this->getId())
      ;

      if ($from or $to) {
        $query->addWhere('(a.arrived_at >= ? and a.arrived_at <= ?)', [
          $from,
          $to,
        ]);
      }

      $this->arrivalsSum = (double)$query->execute([], Doctrine_Core::HYDRATE_SINGLE_SCALAR);
    }

    return $this->arrivalsSum;
  }



  public function getUtilizationsAmount($from=false, $to=false)
  {
    if (null === $this->utilizationsAmount) {
      $query = Doctrine_Query::create()
        ->from('Utilization u')
        ->select('sum(u.amount)')
        ->addWhere('u.material_id = ?', $this->getId())
      ;

      if ($from or $to) {
        $query->addWhere('(u.created_at >= ? and u.created_at <= ?)', [
          $from,
          $to,
        ]);
      }

      $this->utilizationsAmount = (double)$query->execute([], Doctrine_Core::HYDRATE_SINGLE_SCALAR);
    }

    return $this->utilizationsAmount;
  }

  public function getUtilizationsSum($from=false, $to=false)
  {
    if (null === $this->utilizationsSum) {
      $query = Doctrine_Query::create()
        ->from('Utilization u')
        ->leftJoin('u.RefUtilizationArrival rua')
        ->leftJoin('rua.Arrival ua')
        ->select('sum(rua.amount * ua.price) utilized_sum')
        ->addWhere('u.material_id = ?', $this->getId())
      ;

      if ($from or $to) {
        $query->addWhere('(u.created_at >= ? and u.created_at <= ?)', [
          $from,
          $to,
        ]);
      }

      $this->utilizationsSum = (double)$query->execute([], Doctrine_Core::HYDRATE_SINGLE_SCALAR);
    }

    return $this->utilizationsSum;
  }



  public function getRemainedAmount($from=false, $to=false)
  {
    return $this->getArrivalsAmount($from, $to) - $this->getUtilizationsAmount($from, $to);
  }

  public function getRemainedSum($from=false, $to=false)
  {
    return $this->getArrivalsSum($from, $to) - $this->getUtilizationsSum($from, $to);
  }
}
