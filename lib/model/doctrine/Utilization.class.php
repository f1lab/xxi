<?php

/**
 * Utilization
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    xxi
 * @subpackage model
 * @author     Saritskiy Roman
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Utilization extends BaseUtilization
{
  public function getPriceForOne()
  {
    $price = 0;
    foreach ($this->getRefUtilizationArrival() as $part) {
      $price += $part->getArrival()->getPrice() * $part->getAmount() / $this->getAmount();
    }

    return $price;
  }

  public function getPrice()
  {
    $price = 0;
    foreach ($this->getRefUtilizationArrival() as $part) {
      $price += $part->getArrival()->getPrice() * $part->getAmount();
    }

    return $price;
  }

  public function preSave($event)
  {
    $utilization = $event->getInvoker();
    $utilizationOld = $utilization->getModified(true);

    if ($utilization->isNew()) {
      $utilizationOld['amount'] = 0;
    }

    if ($utilizationOld['amount'] or $utilization->isNew()) {
      $arrivalSpendCollection = new Doctrine_Collection('RefUtilizationArrival');

      if ($utilizationOld['amount'] < $utilization->getAmount()) { // utilized more than saved
        $toUtilize = $utilization->getAmount() - $utilizationOld['amount'];

        $arrivals = Doctrine_Query::create()
          ->from('Arrival a')
          ->select('a.*, coalesce(sum(spent.amount), 0) spend')
          ->leftJoin('a.RefUtilizationArrival spent')
          ->addWhere('a.material_id = ?', $utilization->getMaterialId())
          ->addOrderBy('a.arrived_at desc')
          ->having('spend < a.amount')
          ->groupBy('a.id')
          ->execute()
        ;

        if ($arrivals and count($arrivals) and true == ($arrivals = $arrivals->getData())) { // get array of Doctrine_Records insteadof Doctrine_Collection
          while ($toUtilize) {
            $arrival = array_pop($arrivals);
            $utilized = ($arrival->getAmount() - $arrival->getSpend()) >= $toUtilize
              ? $toUtilize
              : $arrival->getAmount()
            ;
            $arrivalSpend = (new RefUtilizationArrival())
              ->setUtilization($utilization)
              ->setArrivalId($arrival->getId())
              ->setAmount($utilized)
            ;

            $arrivalSpendCollection->add($arrivalSpend);
            $toUtilize -= $utilized;
          }
        } else {
          throw new Exception('No arrivals to spend');
        }
      } else { // less utilized than saved
        throw new Exception('Not implemented');

        /* $toReturn = $utilizationOld['amount'] - $utilization->getAmount();

        $arrivalSpents = Doctrine_Query::create()
          ->from('RefUtilizationArrival spent')
          ->leftJoin('spent.Arrival a')
          ->addWhere('spent.utilization_id = ?', $utilization->getId())
          ->addOrderBy('a.arrived_at asc')
          ->execute()
        ;

        if ($arrivals and count($arrivals) and true == ($arrivals = $arrivals->getData())) { // get array of Doctrine_Records insteadof Doctrine_Collection
          while ($toReturn) {
            $arrivalSpent = array_pop($arrivalSpents);
            $returned = ($arrival->getAmount() - $arrival->getSpend()) >= $toUtilize->getAmount()
              ? $toUtilize->getAmount()
              : $arrival->getAmount()
            ;

            $arrivalSpendCollection->add($arrivalSpend);
            $toReturn -= $returned;
          }
        } else {
          throw new Exception('No arrivals to return'); // absurd
        } */
      }

      $utilization->setRefUtilizationArrival($arrivalSpendCollection);
    }
  }
}
